name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Run tests with coverage and speed budgets
        env:
          # Determinism knobs
          CHESS_FORTIFY_TIEBREAK_JITTER: '0.0'
          PYTHONHASHSEED: '0'
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
      - name: Install linters
        run: pip install ruff
      - name: Run Ruff (basic lint)
        run: ruff check . --select F --exclude vendors --output-format=github

  python-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Python tests
        run: pytest
      - name: Generate examples
        run: python examples/integration_example.py > examples/example_output.txt
      - name: Upload examples
        uses: actions/upload-artifact@v4
        with:
          name: generated-examples
          path: examples/example_output.txt

  r-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t chess-test .
      - name: Run R tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace chess-test bash scripts/run_r_tests.sh
