#!/bin/bash

# –£–º–Ω—ã–π git stash —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: 
#   ./git_stash_with_logs.sh stash [message]  - —Å–æ–∑–¥–∞—Ç—å stash —Å –±—ç–∫–∞–ø–æ–º –ª–æ–≥–æ–≤
#   ./git_stash_with_logs.sh pop              - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å stash –∏ –ª–æ–≥–∏
#   ./git_stash_with_logs.sh list             - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ stash'–∏ –∏ –±—ç–∫–∞–ø—ã

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_PREFIX="logs_backup_"
STASH_INFO_FILE=".git_stash_logs_info"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ –ª–æ–≥–æ–≤
create_logs_backup() {
    local backup_dir="${BACKUP_PREFIX}$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$backup_dir"
    
    echo "üîÑ –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ª–æ–≥–æ–≤ –≤ –ø–∞–ø–∫–µ: $backup_dir"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ –ø–∞–ø–∫–∏ —Å –ª–æ–≥–∞–º–∏
    local files_copied=0
    
    if [ -d "runs" ] && [ "$(ls -A runs 2>/dev/null)" ]; then
        echo "üìÅ –ö–æ–ø–∏—Ä—É—é –ø–∞–ø–∫—É runs/..."
        cp -r runs "$backup_dir/"
        files_copied=$((files_copied + $(find runs -name "*.json" | wc -l)))
    fi
    
    if [ -d "logs" ] && [ "$(ls -A logs 2>/dev/null)" ]; then
        echo "üìÅ –ö–æ–ø–∏—Ä—É—é –ø–∞–ø–∫—É logs/..."
        cp -r logs "$backup_dir/"
        files_copied=$((files_copied + $(find logs -name "*.log" | wc -l)))
    fi
    
    if [ -d "output" ] && [ "$(ls -A output 2>/dev/null)" ]; then
        echo "üìÅ –ö–æ–ø–∏—Ä—É—é –ø–∞–ø–∫—É output/..."
        cp -r output "$backup_dir/"
        files_copied=$((files_copied + $(find output -type f | wc -l)))
    fi
    
    if [ -f "ratings.json" ]; then
        echo "üìÑ –ö–æ–ø–∏—Ä—É—é ratings.json..."
        cp ratings.json "$backup_dir/"
        files_copied=$((files_copied + 1))
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—ç–∫–∞–ø–µ
    cat > "$backup_dir/backup_info.txt" << EOF
–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: $(date)
–ö–æ–º–∞–Ω–¥–∞ git stash: git stash push -m "$1"
–§–∞–π–ª–æ–≤ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: $files_copied
–ü–∞–ø–∫–∏ –≤ –±—ç–∫–∞–ø–µ:
$(ls -la "$backup_dir")
EOF
    
    echo "$backup_dir"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤
restore_logs() {
    local backup_dir="$1"
    
    if [ ! -d "$backup_dir" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ '$backup_dir' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 1
    fi
    
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ª–æ–≥–∏ –∏–∑ –ø–∞–ø–∫–∏: $backup_dir"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–ø–∫–∏
    if [ -d "$backup_dir/runs" ]; then
        echo "üìÅ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–ø–∫—É runs/..."
        if [ -d "runs" ]; then
            mv runs "runs_backup_$(date +%Y%m%d_%H%M%S)" 2>/dev/null || true
        fi
        cp -r "$backup_dir/runs" .
    fi
    
    if [ -d "$backup_dir/logs" ]; then
        echo "üìÅ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–ø–∫—É logs/..."
        if [ -d "logs" ]; then
            mv logs "logs_backup_$(date +%Y%m%d_%H%M%S)" 2>/dev/null || true
        fi
        cp -r "$backup_dir/logs" .
    fi
    
    if [ -d "$backup_dir/output" ]; then
        echo "üìÅ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–ø–∫—É output/..."
        if [ -d "output" ]; then
            mv output "output_backup_$(date +%Y%m%d_%H%M%S)" 2>/dev/null || true
        fi
        cp -r "$backup_dir/output" .
    fi
    
    if [ -f "$backup_dir/ratings.json" ]; then
        echo "üìÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é ratings.json..."
        if [ -f "ratings.json" ]; then
            cp ratings.json "ratings_backup_$(date +%Y%m%d_%H%M%S).json" 2>/dev/null || true
        fi
        cp "$backup_dir/ratings.json" .
    fi
    
    echo "‚úÖ –õ–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-}" in
    "stash")
        message="${2:-Stash with logs backup}"
        echo "üöÄ –°–æ–∑–¥–∞—é git stash —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤..."
        
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ª–æ–≥–æ–≤
        backup_dir=$(create_logs_backup "$message")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—ç–∫–∞–ø–µ
        echo "$backup_dir" > "$STASH_INFO_FILE"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º git stash
        echo "üì¶ –í—ã–ø–æ–ª–Ω—è—é git stash..."
        git stash push -m "$message"
        
        echo ""
        echo "‚úÖ Git stash —Å–æ–∑–¥–∞–Ω —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º: '$message'"
        echo "üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $backup_dir"
        echo ""
        echo "–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
        echo "  $0 pop"
        ;;
        
    "pop")
        echo "üöÄ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é git stash –∏ –ª–æ–≥–∏..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –±—ç–∫–∞–ø–µ
        if [ -f "$STASH_INFO_FILE" ]; then
            backup_dir=$(cat "$STASH_INFO_FILE")
            echo "üìÅ –ù–∞–π–¥–µ–Ω –±—ç–∫–∞–ø –ª–æ–≥–æ–≤: $backup_dir"
        else
            echo "‚ö†Ô∏è  –§–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—ç–∫–∞–ø–µ –Ω–µ –Ω–∞–π–¥–µ–Ω"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–ø–∫–∏ —Å –±—ç–∫–∞–ø–∞–º–∏:"
            ls -d ${BACKUP_PREFIX}* 2>/dev/null || echo "  (–ø–∞–ø–∫–∏ —Å –±—ç–∫–∞–ø–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã)"
            echo ""
            read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–∞–ø–∫–∏ —Å –±—ç–∫–∞–ø–æ–º (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): " backup_dir
        fi
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º git stash
        echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é git stash..."
        git stash pop
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –±—ç–∫–∞–ø
        if [ -n "$backup_dir" ] && [ -d "$backup_dir" ]; then
            restore_logs "$backup_dir"
            echo ""
            echo "üóëÔ∏è  –£–¥–∞–ª—è—é –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—ç–∫–∞–ø–µ..."
            rm -f "$STASH_INFO_FILE"
            echo ""
            read -p "–£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É —Å –±—ç–∫–∞–ø–æ–º '$backup_dir'? (y/N): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                rm -rf "$backup_dir"
                echo "‚úÖ –ü–∞–ø–∫–∞ —Å –±—ç–∫–∞–ø–æ–º —É–¥–∞–ª–µ–Ω–∞"
            else
                echo "üìÅ –ü–∞–ø–∫–∞ —Å –±—ç–∫–∞–ø–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $backup_dir"
            fi
        else
            echo "‚ö†Ô∏è  –õ–æ–≥–∏ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–±—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω)"
        fi
        ;;
        
    "list")
        echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ git stash'–∏:"
        git stash list
        echo ""
        echo "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–ø–∫–∏ —Å –±—ç–∫–∞–ø–∞–º–∏ –ª–æ–≥–æ–≤:"
        ls -d ${BACKUP_PREFIX}* 2>/dev/null || echo "  (–ø–∞–ø–∫–∏ —Å –±—ç–∫–∞–ø–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã)"
        echo ""
        if [ -f "$STASH_INFO_FILE" ]; then
            echo "üîó –°–≤—è–∑–∞–Ω–Ω—ã–π –±—ç–∫–∞–ø: $(cat "$STASH_INFO_FILE")"
        fi
        ;;
        
    *)
        echo "–£–º–Ω—ã–π git stash —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
        echo "  $0 stash [message]  - —Å–æ–∑–¥–∞—Ç—å stash —Å –±—ç–∫–∞–ø–æ–º –ª–æ–≥–æ–≤"
        echo "  $0 pop              - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å stash –∏ –ª–æ–≥–∏"
        echo "  $0 list             - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ stash'–∏ –∏ –±—ç–∫–∞–ø—ã"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 stash 'Work in progress'"
        echo "  $0 pop"
        echo "  $0 list"
        ;;
esac