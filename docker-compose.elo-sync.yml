services:
  elo-sync:
    build:
      context: .
      dockerfile: Dockerfile.elo-sync
    container_name: chess-elo-sync
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Platform credentials (set these in .env file)
      - LICHESS_TOKEN=${LICHESS_TOKEN:-}
      - CHESSCOM_USERNAME=${CHESSCOM_USERNAME:-}
      - CHESSCOM_PASSWORD=${CHESSCOM_PASSWORD:-}
      
      # Configuration
      - RATINGS_FILE=/app/data/ratings.json
      - CONFIG_FILE=/app/data/sync_config.json
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PORT=8080
      - HOST=0.0.0.0
    volumes:
      # Persistent data storage
      - elo-data:/app/data
      - elo-logs:/app/logs
      - elo-ratings:/app/ratings
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chess-network

  # Optional: Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    container_name: chess-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - chess-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: chess-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - elo-sync
    networks:
      - chess-network

volumes:
  elo-data:
    driver: local
  elo-logs:
    driver: local
  elo-ratings:
    driver: local
  redis-data:
    driver: local

networks:
  chess-network:
    driver: bridge