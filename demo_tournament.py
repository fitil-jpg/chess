#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä - –±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import time
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def run_demo_tournament():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä —Å 2 –±–æ—Ç–∞–º–∏"""
    print("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–û–ù–ù–´–ô –¢–£–†–ù–ò–† ===")
    print("–£—á–∞—Å—Ç–Ω–∏–∫–∏: RandomBot vs DynamicBot")
    print("–§–æ—Ä–º–∞—Ç: Bo3 (–ª—É—á—à–∏–π –∏–∑ 3 –∏–≥—Ä)")
    print("–í—Ä–µ–º—è: 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∏–≥—Ä—É")
    print()
    
    try:
        from tournament_runner import TournamentRunner
        import chess
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–≤–µ—Ä—Å–∏—é —Ç—É—Ä–Ω–∏—Ä–∞
        class DemoTournamentRunner(TournamentRunner):
            def __init__(self):
                # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–µ–º–æ
                self.bot_names = ["RandomBot", "DynamicBot"]
                self.tournament_stats = {}
                self.tournament_patterns = []
                self.games_per_match = 3
                self.time_per_game = 30  # 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ–º–æ
                
                # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                os.makedirs('tournament_logs', exist_ok=True)
                os.makedirs('tournament_patterns', exist_ok=True)
                os.makedirs('tournament_stats', exist_ok=True)
                
                print(f"–î–µ–º–æ-—Ç—É—Ä–Ω–∏—Ä: {len(self.bot_names)} –±–æ—Ç–æ–≤, {self.games_per_match} –∏–≥—Ä –Ω–∞ –º–∞—Ç—á, {self.time_per_game}—Å –Ω–∞ –∏–≥—Ä—É")
                print(f"–ë–æ—Ç—ã: {', '.join(self.bot_names)}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ-—Ç—É—Ä–Ω–∏—Ä
        runner = DemoTournamentRunner()
        
        print("\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–º–æ-—Ç—É—Ä–Ω–∏—Ä...")
        start_time = time.time()
        
        # –ò–≥—Ä–∞–µ–º –æ–¥–∏–Ω –º–∞—Ç—á
        match_result = runner.play_match("RandomBot", "DynamicBot")
        
        total_time = time.time() - start_time
        
        print(f"\n‚úÖ –î–µ–º–æ-—Ç—É—Ä–Ω–∏—Ä –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {total_time:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {match_result['bot1']} {match_result['bot1_wins']}-{match_result['bot2_wins']} {match_result['bot2']}")
        print(f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {match_result['winner']}")
        print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤: {len(runner.tournament_patterns)}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        runner._save_tournament_data([match_result])
        
        print("\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:")
        print("  - tournament_logs/")
        print("  - tournament_patterns/")
        print("  - tournament_stats/")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ-—Ç—É—Ä–Ω–∏—Ä–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

def show_tournament_files():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Ç—É—Ä–Ω–∏—Ä–∞"""
    print("\n=== –§–ê–ô–õ–´ –¢–£–†–ù–ò–†–ê ===")
    
    directories = ["tournament_logs", "tournament_patterns", "tournament_stats"]
    
    for dir_name in directories:
        if os.path.exists(dir_name):
            files = os.listdir(dir_name)
            print(f"\nüìÅ {dir_name}/")
            for file in files:
                file_path = os.path.join(dir_name, file)
                size = os.path.getsize(file_path)
                print(f"  üìÑ {file} ({size} bytes)")
        else:
            print(f"\nüìÅ {dir_name}/ - –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ"""
    print("üéÆ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –¢–£–†–ù–ò–†–ù–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ-—Ç—É—Ä–Ω–∏—Ä
    success = run_demo_tournament()
    
    if success:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        show_tournament_files()
        
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("  ./run_tournament.sh")
        print("\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
        print("  python3 run_tournament_pattern_viewer.py")
    else:
        print("\n‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–∏—Å—Ç–µ–º—ã: python3 test_tournament.py")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)